 a=load('314.txt');
b=load('a.txt');


P=[p(:,1)+p(:,2)+p(:,3) p(:,2)+p(:,3)+p(:,4) p(:,3)+p(:,4)+p(:,5) p(:,4)+p(:,5)+p(:,6) p(:,5)+p(:,6)+p(:,7) p(:,6)+p(:,7)+p(:,8) p(:,7)+p(:,8)+p(:,9) p(:,8)+p(:,9)+p(:,10) p(:,9)+p(:,10)+p(:,11)];
T=[t(:,1) t(:,2) t(:,3) t(:,4) t(:,5) t(:,6) t(:,7) t(:,8) t(:,9)];
%输入样本的输入和目标
net=train(net,P,T);


RBF神经网络预测
以下是程序：

P=[405	492.98 	92.93380952 80.98
393 436.34 95.349 93.04
350.625 428.31 105.42 89.64
384.17 368.25 112.4618182 97.53
468.5 390.07 125.7972727 100.69
502.5 430.10 134.0157143 109.52
440 486.81 133.4845455 115.18
414.5 456.28 116.6880952 108.91
390.625	426.29 104.0881818 115.45
305.5 396.42 76.72391304 107.63
187.375	270.93 57.44105263 91.06
166.875	199.04 42.05045455 107.3
175.9 180.16 42.33681818 102.51
195.5 175.36 39.25842105 119.8
205.25 186.61 48.06181818 149.48
231 202.73  49.94952381	147.98
213.25 215.08 59.2125 160.76
232.25 220.72 69.69545455	152.46
237.7 228.60 64.29318182	140.96
254 236.98 71.13857143	131.77
267.25 249.02 69.46809524	136.88
257.2 263.75 75.82363636	133.89
259.125 261.56 78.2725	132.34
307.1 264.26 74.73727273	141.71
320 304.24 78.40263158	151.58
316.9 313.09 76.45263158	153.84
301 322.73 81.29	181.97
270.7 303.97 84.5752381	183.48
253.375	279.11 74.1175	180.47
244.5 260.58 75.40454545	186.56
242.7 244.69 76.38285714	158.13
268.25 248.52 76.66681818	179.59
284.5 271.15 75.54857143	178.34
328.8333333 289.35 81.9747619	163.19
380.125 332.26 84.3147619	180.72
354.625 375.42 89.23318182	195.03
347.25 356.82 89.5785	169.52
348.75 347.78 89.74315789	171.45
340.5 353.25 103.0229167	234.99
341 346.78 110.0385	226.58
357.25 348.00 101.3566667	226.19
347.25 355.53 96.28863636	230.89
362.6 354.34 97.3405	203.9
377.5 373.12 86.17083333	206.31
406 389.82 85.61	216.15
404.875 406.75 86.4252381	227.34
369.75 405.51 97.16285714	223.45
360.4 382.71 98.57571429	217.04
371.5 368.06 100.3185	213.29
374 379.25 102.2625	250.11
380.5 383.15 106.205	275.3
391.25 387.83 103.346	265.18
403.25 399.06 94.71681818	253.58
372.6 400.96 82.4052381	249.19
362 381.42 	87.93142857	223.01
362.4 374.03 	94.16086957	264.14
360.3333333 365.86 	94.654	277.77
362.75 366.98 	89.57086957	248.1
358	369.91 	82.79	281.92225
358.33	363.30 	84.04	261.23305
356.5	362.72	90.51	275.9487
369.5	360.51	95.32157895	277.48599
368.2	374.66	92.957	285.52374
364	373.97	92.06772727	281.5809
366.1	370.34	94.79954545	261.7324
358	364.91	95.8005	234.94353
363	360.98	104.6986	263.65302
381.3	369.93	106.5386	248.96827]';
T=[3333 3314 3317 3552 4256 4330 3757 3510 3323 2533 1962 1751 1658 1792 1851 2051 1876 1932 1945 2069 2164 2139 2322 2666 2747 2739 2647 2363 2184 2130 2108 2367 2473 2785 3279 3015 2902 2906 2747 2798 2847 2759 2902 3008 3196 3173 2965 2832 2935 2983 2940 3039 3065 2819 2830 2842 2869 2866 2789 2765 2805 2868 2788 2728 2871 2605 2618 2947]
%通过改变扩展速度创建3个RBF神经网络
for i = 1:3
net = newrb(P,T,0.01,i,68,25);
%对样本进行模拟仿真
y = sim(net,P) 
end
%在同一幅图中拟合训练样本
figure;
plot(1:68,T);
hold on;
plot(1:68,y,'-*');
hold off;
//////////////////////////时间序列预测-简单移动平均法

clear
clc
y=[3333 3314 3317 3552 4256 4330 3757 3510 3323 2533 1962 1751 1658 1792 1851 2051 1876 1932 1945 2069 2164 2139 2322 2666 2747 2739 2647 2363 2184 2130 2108 2367 2473 2785 3279 3015 2902 2906 2747 2798 2847 2759 2902 3008 3196 3173 2965 2832 2935 2983 2940 3039 3065 2819 2830 2842 2869 2866 2789 2765 2805 2868 2788 2728 2871 2605 2618 2947]
m=length(y);
k=[4,5,6,7,8,9];
for i=1:length(k)
for j=1:m-k(i)+1
  yhat{i}(j)=sum(y(j:j+k(i)-1))/k(i);
end 
yuce(i)=yhat{i}(end);
err(i)=sqrt(mean((y(n(i)+1:m)-yhat{i}(1:end-1)).^2));
end 
yuce,err
//////////////////加权平均法
y=[3333 3314 3317 3552 4256 4330 3757 3510 3323 2533 1962 1751 1658 1792 1851 2051 1876 1932 1945 2069 2164 2139 2322 2666 2747 2739 2647 2363 2184 2130 2108 2367 2473 2785 3279 3015 2902 2906 2747 2798 2847 2759 2902 3008 3196 3173 2965 2832 2935 2983 2940 3039 3065 2819 2830 2842 2869 2866 2789 2765 2805 2868 2788 2728 2871 2605 2618 2947]
w=[1/6;2/6;3/6]
m=length(y);
n=3;
for i=1:m-n+1
 yhat(i)=y(i:i+n-1)*w;
end 
yhat
err=abs(y(n+1:m)-yhat(1:end-1))./y(n+1:m);
T_err=1-sum(yhat(1:end-1))/sum(y(n+1:m))
yuce=yhat(end)/(1-T_err);
plot(1:m,y,'*',1:m-2,yhat,'O')
////////////////////////一次指数平滑
yt=[3333 3314 3317 3552 4256 4330 3757 3510 3323 2533 1962 1751 1658 1792 1851 2051 1876 1932 1945 2069 2164 2139 2322 2666 2747 2739 2647 2363 2184 2130 2108 2367 2473 2785 3279 3015 2902 2906 2747 2798 2847 2759 2902 3008 3196 3173 2965 2832 2935 2983 2940 3039 3065 2819 2830 2842 2869 2866 2789 2765 2805 2868 2788 2728 2871 2605 2618 2947]
n=length(yt);
alpha=[0.2 0.5 0.8];m=length(alpha);
yhat(1,1:m)=(yt(1)+yt(2))/2;
for i=2:n
yhat(i,:)=alpha*yt(i-1)+(1-alpha).*yhat(i-1,:);
end
err=sqrt(mean((repmat(yt,m,1)'-yhat).^2))
yhat%预测值
yhat=alpha*yt(n)+(1-alpha).*yhat(n,:)%下一个预测
/////a
yt=[3333 3314 3317 3552 4256 4330 3757 3510 3323 2533 1962 1751 1658 1792 1851 2051 1876 1932 1945 2069 2164 2139 2322 2666 2747 2739 2647 2363 2184 2130 2108 2367 2473 2785 3279 3015 2902 2906 2747 2798 2847 2759 2902 3008 3196 3173 2965 2832 2935 2983 2940 3039 3065 2819 2830 2842 2869 2866 2789 2765 2805 2868 2788 2728 2871 2605 2618 2947]
n=length(yt);
alpha=0:0.01:1;m=length(alpha);
yhat(1,1:m)=(yt(1)+yt(2))/2;
for i=2:n
yhat(i,:)=alpha*yt(i-1)+(1-alpha).*yhat(i-1,:);
end
yhat
err=sqrt(mean((repmat(yt,m,1)'-yhat).^2))
yuce=alpha*yt(n)+(1-alpha).*yhat(n,:)
min(min(err))
[x,y]=find(err==min(min(err)))
///////////////////////////////////二次指数平滑
yt=[3333 3314 3317 3552 4256 4330 3757 3510 3323 2533 1962 1751 1658 1792 1851 2051 1876 1932 1945 2069 2164 2139 2322 2666 2747 2739 2647 2363 2184 2130 2108 2367 2473 2785 3279 3015 2902 2906 2747 2798 2847 2759 2902 3008 3196 3173 2965 2832 2935 2983 2940 3039 3065 2819 2830 2842 2869 2866 2789 2765 2805 2868 2788 2728 2871 2605 2618 2947]
n=length(yt);
alpha=0.3; st1(1)=yt(1); st2(1)=yt(1);
for i=2:n
st1(i)=alpha*yt(i)+(1-alpha)*st1(i-1);
st2(i)=alpha*st1(i)+(1-alpha)*st2(i-1);
end
a=2*st1-st2
b=alpha/(1-alpha)*(st1-st2)
yhat=a+b;%预测下一个值
yhat=a+2*b;%预测第二个值
st1%一次指数
st2%二次指数
plot(1:n,yt);
hold on
plot(1:n,st1,'*',1:n,st2,'O')
hold on
plot(1:n,yhat,'r')
///////////////////////////////////////////三次指数平滑
yt=[3333 3314 3317 3552 4256 4330 3757 3510 3323 2533 1962 1751 1658 1792 1851 2051 1876 1932 1945 2069 2164 2139 2322 2666 2747 2739 2647 2363 2184 2130 2108 2367 2473 2785 3279 3015 2902 2906 2747 2798 2847 2759 2902 3008 3196 3173 2965 2832 2935 2983 2940 3039 3065 2819 2830 2842 2869 2866 2789 2765 2805 2868 2788 2728 2871 2605 2618 2947]
n=length(yt);
alpha=0.3; st1_0=mean(yt(1:3)); st2_0=st1_0;st3_0=st1_0;
st1(1)=alpha*yt(1)+(1-alpha)*st1_0;
st2(1)=alpha*st1(1)+(1-alpha)*st2_0;
st3(1)=alpha*st2(1)+(1-alpha)*st3_0;
for i=2:n
st1(i)=alpha*yt(i)+(1-alpha)*st1(i-1);
st2(i)=alpha*st1(i)+(1-alpha)*st2(i-1);
st3(i)=alpha*st2(i)+(1-alpha)*st3(i-1);
end
st1=[st1_0,st1];st2=[st2_0,st2];st3=[st3_0,st3];
a=3*st1-3*st2+st3;
b=0.5*alpha/(1-alpha)^2*((6-5*alpha)*st1-2*(5-4*alpha)*st2+(4-3*alpha)*st3);
c=0.5*alpha^2/(1-alpha)^2*(st1-2*st2+st3);
yhat=a+b+c;
st1%一次指数
st2%二次指数
st3%三次指数
plot(1:n,yt)
hold on
plot(1:n+1,st1,'*')
hold on 
plot(1:n+1,st2,'+')
hold on
plot(1:n+1,st3,'s')
hold on
plot(1:n+1,yhat,'r')
legend('实际值','预测值',2)
xishu=[c(n+1),b(n+1),a(n+1)];
yuce(end+1)=polyval(xishu,2)

//////////////////////////////////////////自适应滤波法
clc,clear
yt=[3333 3314 3317 3552 4256 4330 3757 3510 3323 2533 1962 1751 1658 1792 1851 2051 1876 1932 1945 2069 2164 2139 2322 2666 2747 2739 2647 2363 2184 2130 2108 2367 2473 2785 3279 3015 2902 2906 2747 2798 2847 2759 2902 3008 3196 3173 2965 2832 2935 2983 2940 3039 3065 2819 2830 2842 2869 2866 2789 2765 2805 2868 2788 2728 2871 2605 2618 2947]
yt=[1 2 3 4 5 6 7 8 9]
m=length(yt); k=0.9;
N=2; Terr=10000;
w=ones(1,N)/N;
while abs(Terr)>0.00001
   Terr=[];
   for j=N+1:m-1
   yhat(j)=w*yt(j-1:-1:j-N)';
   err=yt(j)-yhat(j);
   Terr=[Terr,abs(err)];
   w=w+2*k*err*yt(j-1:-1:j-N);
   end
Terr=max(Terr);
end
w, yhat
yy=w*yt(end:-1:end-1)';
/////////////////////////////////////////
yt=0.1:0.1:1;
m=length(yt); k=0.9;
N=2; Terr=10000;
w=ones(1,N)/N;
while abs(Terr)>0.00001
Terr=[];
for j=N+1:m-1
yhat(j)=w*yt(j-1:-1:j-N)';
err=yt(j)-yhat(j);
Terr=[Terr,abs(err)];
w=w+2*k*err*yt(j-1:-1:j-N);
end
Terr=max(Terr);
end
w, yhat